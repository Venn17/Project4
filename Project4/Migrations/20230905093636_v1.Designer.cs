// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project4.Services;

namespace Project4.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230905093636_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project4.Models.Carts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductID");

                    b.Property<int?>("ProductsId");

                    b.Property<int>("QuantityProduct");

                    b.Property<int>("QuantityTopping");

                    b.Property<int>("SizeID");

                    b.Property<int?>("SizesId");

                    b.Property<int>("ToppingID");

                    b.Property<int?>("ToppingsId");

                    b.Property<int>("UserID");

                    b.Property<int?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.HasIndex("SizesId");

                    b.HasIndex("ToppingsId");

                    b.HasIndex("UsersId");

                    b.ToTable("tblCarts");
                });

            modelBuilder.Entity("Project4.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("tblCategories");
                });

            modelBuilder.Entity("Project4.Models.Coupons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("Percent");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("tblCoupons");
                });

            modelBuilder.Entity("Project4.Models.Historys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartID");

                    b.Property<int?>("CartsId");

                    b.Property<int>("CouponID");

                    b.Property<int?>("CouponsId");

                    b.Property<int>("Payment");

                    b.Property<int>("Status");

                    b.Property<int>("UserID");

                    b.Property<int?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("CartsId");

                    b.HasIndex("CouponsId");

                    b.HasIndex("UsersId");

                    b.ToTable("tblHistorys");
                });

            modelBuilder.Entity("Project4.Models.Logined", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserID");

                    b.Property<int?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("tblLogined");
                });

            modelBuilder.Entity("Project4.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriesId");

                    b.Property<int>("CategoryID");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("SalePrice");

                    b.Property<int>("Sold");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.ToTable("tblProducts");
                });

            modelBuilder.Entity("Project4.Models.Sizes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ProductID");

                    b.Property<int?>("ProductsId");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.ToTable("tblSizes");
                });

            modelBuilder.Entity("Project4.Models.Toppings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("ProductID");

                    b.Property<int?>("ProductsId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.ToTable("tblToppings");
                });

            modelBuilder.Entity("Project4.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Avatar");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.ToTable("tblUsers");
                });

            modelBuilder.Entity("Project4.Models.Carts", b =>
                {
                    b.HasOne("Project4.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsId");

                    b.HasOne("Project4.Models.Sizes", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizesId");

                    b.HasOne("Project4.Models.Toppings", "Toppings")
                        .WithMany()
                        .HasForeignKey("ToppingsId");

                    b.HasOne("Project4.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("Project4.Models.Historys", b =>
                {
                    b.HasOne("Project4.Models.Carts", "Carts")
                        .WithMany()
                        .HasForeignKey("CartsId");

                    b.HasOne("Project4.Models.Coupons", "Coupons")
                        .WithMany()
                        .HasForeignKey("CouponsId");

                    b.HasOne("Project4.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("Project4.Models.Logined", b =>
                {
                    b.HasOne("Project4.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("Project4.Models.Products", b =>
                {
                    b.HasOne("Project4.Models.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId");
                });

            modelBuilder.Entity("Project4.Models.Sizes", b =>
                {
                    b.HasOne("Project4.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsId");
                });

            modelBuilder.Entity("Project4.Models.Toppings", b =>
                {
                    b.HasOne("Project4.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsId");
                });
#pragma warning restore 612, 618
        }
    }
}
